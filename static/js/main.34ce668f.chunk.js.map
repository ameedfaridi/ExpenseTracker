{"version":3,"sources":["Component/Navbar.jsx","Component/HomeNav.jsx","redux/Count/Count.js","Component/HomeBody.jsx","Component/Home.jsx","Component/Card.jsx","redux/Income/ActionIncome.js","redux/expense/ActionExpense.js","Component/CardBody.jsx","Component/Expense.jsx","Component/Income.jsx","App.js","serviceWorker.js","redux/RootReducer.js","redux/store.js","index.js"],"names":["Navbar","className","id","fontSize","onClick","document","getElementById","classList","contains","toggle","style","display","listStyle","to","HomeNav","count","useSelector","state","Count","dispatch","useDispatch","AppBar","position","color","Toolbar","Typography","flexGrow","IconButton","aria-label","type","Badge","badgeContent","HomeBody","props","incomeSum","expenseSum","Grid","container","item","xs","marginTop","justifyContent","Paper","elevation","Home","income","Income","expense","Expense","useState","chartData","setChartData","map","data","useEffect","labels","datasets","label","backgroundColor","borderWidth","height","options","responsive","maintainAspectRatio","connect","addIncome","add","payload","addExpense","incCount","margin","width","textAlign","e","preventDefault","target","parseInt","value","alert","getValue","TextField","name","variant","autoComplete","required","placeholder","Button","btn","CardBody","sum","last","jsx","length","Sum","undefined","expenseData","key","flexDirection","alignItems","del_expense","incomeData","del_income","App","exact","path","component","Boolean","window","location","hostname","match","intialIncomeState","intialExpenseState","intialCountState","rootReducer","combineReducers","action","filter","store","createStore","applyMiddleware","logger","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34ce668f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport CreditCardRoundedIcon from \"@material-ui/icons/CreditCardRounded\";\r\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const open = () => {\r\n    if (document.getElementById(\"check\").classList.contains(\"SideNavBar\")) {\r\n      document.getElementById(\"check\").classList.toggle(\"fully\");\r\n      document.getElementById(\"grid2\").classList.toggle(\"hidden\");\r\n    } else {\r\n      document.getElementById(\"check\").classList.toggle(\"SideNavBar\");\r\n      document.getElementById(\"show\").style.display = \"grid2\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"SideNavBar\" id=\"check\">\r\n        <h1>Ameed Faridi</h1>\r\n        <DehazeIcon className=\"bar\" fontSize=\"large\" onClick={open} id=\"hide\" />\r\n        <ul style={{ listStyle: \"none\", fontSize: \"1.5rem\" }}>\r\n          <li>\r\n            <Link to=\"/\">\r\n              <HomeRoundedIcon fontSize=\"large\" className=\"icon\" />\r\n              <p id=\"para\">Home</p>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"income\">\r\n              <AttachMoneyRoundedIcon fontSize=\"large\" className=\"icon\" />\r\n              <p id=\"para\">Income</p>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"expense\">\r\n              <CreditCardRoundedIcon fontSize=\"large\" className=\"icon\" />\r\n              <p id=\"para\">Expense</p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { resetCount } from \"../redux/Count/Count\";\r\n\r\nconst HomeNav = () => {\r\n  const count = useSelector((state) => state.Count.count);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <AppBar position=\"static\" color=\"secondary\">\r\n      <Toolbar style={{ display: \"flex\" }}>\r\n        <Typography style={{ flexGrow: \"2\", fontSize: \"1.3rem\" }}>\r\n          <span style={{ fontSize: \"2rem\" }}>The Expense Tracker</span> <br />\r\n          An application that helps to keep an accurate record of your money\r\n          inflow and outflow\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          style={{ color: \"white\" }}\r\n          onClick={() => dispatch(resetCount())}\r\n        >\r\n          <Badge badgeContent={count} color=\"primary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default HomeNav;\r\n","export const CountPlus = \"CountPlus\";\r\nexport const CountReset = \"CountReset\";\r\n\r\nexport const increseCount = () => {\r\n  return {\r\n    type: CountPlus,\r\n  };\r\n};\r\n\r\nexport const resetCount = () => {\r\n  return {\r\n    type: CountReset,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\n\r\nconst HomeBody = (props) => {\r\n  const { incomeSum, expenseSum } = props;\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          marginTop: \"40px\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        <Paper elevation={3} className=\"homeTotals\">\r\n          Total income<span>${incomeSum}</span>\r\n        </Paper>\r\n        <Paper elevation={3} className=\"homeTotals\">\r\n          Total expense<span>${expenseSum}</span>\r\n        </Paper>\r\n        <Paper elevation={3} className=\"homeTotals\">\r\n          Total Amount<span>${incomeSum - expenseSum}</span>\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeBody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport HomeNav from \"./HomeNav\";\r\nimport HomeBody from \"./HomeBody\";\r\nimport {\r\n  Line,\r\n  Pie,\r\n  Doughnut,\r\n  Bar,\r\n  HorizontalBar,\r\n  Bubble,\r\n  Scatter,\r\n} from \"react-chartjs-2\";\r\n\r\nconst Home = (props) => {\r\n  const income = useSelector((state) => state.Income.income);\r\n  const expense = useSelector((state) => state.Expense.expense);\r\n  const [chartData, setChartData] = useState({});\r\n  let expenseSum = 0;\r\n  let incomeSum = 0;\r\n  income.map((data) => (incomeSum += data.income));\r\n  expense.map((data) => (expenseSum += data.expense));\r\n  const chart = () => {\r\n    setChartData({\r\n      labels: [\"Income\", \"Expense\"],\r\n      datasets: [\r\n        {\r\n          label: [\"Amount\"],\r\n          data: [incomeSum, expenseSum],\r\n          backgroundColor: [\"rgba(48,63,159,0.5)\", \"rgba(197,7,98,0.5)\"],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <HomeNav />\r\n      <HomeBody incomeSum={incomeSum} expenseSum={expenseSum} />\r\n      <div style={{ height: \"25rem\" }}>\r\n        <Pie\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { add_income } from \"../redux/Income/ActionIncome\";\r\nimport { add_expense } from \"../redux/expense/ActionExpense\";\r\nimport { increseCount } from \"../redux/Count/Count\";\r\n\r\nconst Card = (props) => {\r\n  const getValue = (e) => {\r\n    e.preventDefault();\r\n\r\n    e.target.income\r\n      ? parseInt(e.target.income.value)\r\n        ? props.addIncome(parseInt(e.target.income.value)) && props.incCount()\r\n        : alert(\"not a number\")\r\n      : parseInt(e.target.expense.value)\r\n      ? props.addExpense(parseInt(e.target.expense.value)) && props.incCount()\r\n      : alert(\"not a number\");\r\n    return (document.getElementById(\"outlined-basic\").value = \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        style={{ margin: \"1.5rem\", display: \"flex\" }}\r\n        style={{ width: \"100%\", textAlign: \"center\" }}\r\n        onSubmit={(e) => getValue(e)}\r\n      >\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label={props.name}\r\n          variant=\"outlined\"\r\n          name={props.name}\r\n          autoComplete=\"off\"\r\n          required\r\n          style={{ width: \"85%\", margin: \"30px auto\" }}\r\n          placeholder=\"Add payment\"\r\n        />\r\n        <Button\r\n          color={props.color}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          style={{ width: \"85%\" }}\r\n        >\r\n          {props.btn}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DispatchStateToProps = (dispatch) => {\r\n  return {\r\n    addIncome: (add) => dispatch(add_income(add)),\r\n    addExpense: (add) => dispatch(add_expense(add)),\r\n    incCount: () => dispatch(increseCount()),\r\n  };\r\n};\r\n\r\nexport default connect(null, DispatchStateToProps)(Card);\r\n","export const ADD_INCOME = \"ADD_INCOME\";\r\nexport const DEL_INCOME = \"DEL_INCOME\";\r\n\r\nexport const add_income = (info) => {\r\n  return {\r\n    type: ADD_INCOME,\r\n    payload: info,\r\n  };\r\n};\r\n\r\nexport const del_income = (id) => {\r\n  return {\r\n    type: DEL_INCOME,\r\n    id: id,\r\n  };\r\n};\r\n","export const ADD_EXPENSE = \"ADD_EXPENSE\";\r\nexport const DEL_EXPENSE = \"DEL_EXPENSE\";\r\n\r\nexport const add_expense = (info) => {\r\n  return {\r\n    type: ADD_EXPENSE,\r\n    payload: info,\r\n  };\r\n};\r\n\r\nexport const del_expense = (id) => {\r\n  return {\r\n    type: DEL_EXPENSE,\r\n    id: id,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CardBody = (props) => {\r\n  return (\r\n    <Grid container item xs={12} className=\"CardBodyMain\">\r\n      <Grid item xs={6} className=\"CB_Container\">\r\n        <Paper elevation={3} className=\"CD_total\">\r\n          <h3>Total {props.name}</h3>\r\n          <h1>${props.sum}</h1>\r\n        </Paper>\r\n        <Paper elevation={3} className=\"CD_total\">\r\n          <h3>Last Transaction</h3>\r\n          <h1>${props.last}</h1>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={6} className=\"CB_historyContainer\">\r\n        <Grid item xs={6} className=\"CB_history\">\r\n          <h1>{props.name} History</h1>\r\n          <ul>{props.jsx}</ul>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"./Card\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport CardBody from \"./CardBody\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { del_expense } from \"../redux/expense/ActionExpense\";\r\nimport { increseCount } from \"../redux/Count/Count\";\r\n\r\nconst Expense = (props) => {\r\n  const expense = useSelector((state) => state.Expense.expense);\r\n  const dispatch = useDispatch();\r\n\r\n  const delexpense = (id) => {\r\n    dispatch(del_expense(id));\r\n    dispatch(increseCount());\r\n  };\r\n  const length = expense.length - 1;\r\n  let Sum = 0;\r\n  expense.map((data) => (Sum += data.expense));\r\n\r\n  let last = expense[length] !== undefined ? expense[length].expense : 0;\r\n\r\n  return (\r\n    <Paper elevation={3} style={{ margin: \"10px\", height: \"97%\" }}>\r\n      <Grid container item xs={12}>\r\n        <Grid item xs={12}>\r\n          <Card\r\n            label=\"Expense\"\r\n            name=\"expense\"\r\n            btn=\"Add Expense\"\r\n            color=\"secondary\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <CardBody\r\n        name=\"Expense\"\r\n        last={last}\r\n        sum={Sum}\r\n        jsx={expense.map((expenseData) => {\r\n          return (\r\n            <div\r\n              key={expenseData.id}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ textAlign: \"right\" }}\r\n              >{`+ $${expenseData.expense}`}</li>\r\n              <span>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => delexpense(expenseData.id)}\r\n                >\r\n                  Del\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Card from \"./Card\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { del_income } from \"../redux/Income/ActionIncome\";\r\nimport CardBody from \"./CardBody\";\r\nimport { increseCount } from \"../redux/Count/Count\";\r\n\r\nconst Income = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { income } = props;\r\n\r\n  const delIncome = (id) => {\r\n    dispatch(del_income(id));\r\n    dispatch(increseCount());\r\n  };\r\n\r\n  const length = income.length - 1;\r\n\r\n  let Sum = 0;\r\n  income.map((data) => (Sum += data.income));\r\n\r\n  let last = income[length] !== undefined ? income[length].income : 0;\r\n\r\n  return (\r\n    <Paper elevation={8} style={{ margin: \"10px\", height: \"97%\" }}>\r\n      <Grid container item xs={12}>\r\n        <Grid item xs={12}>\r\n          <Card name=\"income\" btn=\"Add Income\" color=\"primary\" />\r\n        </Grid>\r\n        <CardBody\r\n          jsx={income.map((incomeData) => {\r\n            return (\r\n              <div\r\n                key={incomeData.id}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <li\r\n                  style={{ textAlign: \"right\" }}\r\n                >{`+ $${incomeData.income}`}</li>\r\n                <span>\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    onClick={() => delIncome(incomeData.id)}\r\n                  >\r\n                    Del\r\n                  </Button>\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n          name=\"Income\"\r\n          last={last}\r\n          sum={Sum}\r\n        />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => {\r\n  return {\r\n    income: state.Income.income,\r\n  };\r\n};\r\n\r\nexport default connect(MapStateToProps)(Income);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Navbar from \"./Component/Navbar\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./Component/Home\";\nimport Expense from \"./Component/Expense\";\nimport Income from \"./Component/Income\";\nimport { Switch } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <Grid container item xs={12}>\n          <Grid item xs={2}>\n            <Navbar />\n          </Grid>\n          <Grid item xs={10} id=\"grid2\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/income\" component={Income} />\n              <Route exact path=\"/expense\" component={Expense} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_INCOME, DEL_INCOME } from \"./Income/ActionIncome\";\r\nimport { ADD_EXPENSE, DEL_EXPENSE } from \"./expense/ActionExpense\";\r\nimport { combineReducers } from \"redux\";\r\nimport { CountPlus, CountReset } from \"./Count/Count\";\r\n\r\nconst intialIncomeState = {\r\n  id: 0,\r\n  income: [],\r\n};\r\n\r\nconst incomeReducer = (state = intialIncomeState, action) => {\r\n  if (action.type === ADD_INCOME) {\r\n    return {\r\n      id: state.id + 1,\r\n      income: [...state.income, { id: state.id, income: action.payload }],\r\n    };\r\n  } else if (action.type === DEL_INCOME) {\r\n    return {\r\n      ...state,\r\n      income: state.income.filter((income) => income.id !== action.id),\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst intialExpenseState = {\r\n  id: 0,\r\n  expense: [],\r\n};\r\n\r\nconst expenseReducer = (state = intialExpenseState, action) => {\r\n  if (action.type === ADD_EXPENSE) {\r\n    return {\r\n      id: state.id + 1,\r\n      expense: [...state.expense, { id: state.id, expense: action.payload }],\r\n    };\r\n  } else if (action.type === DEL_EXPENSE) {\r\n    return {\r\n      ...state,\r\n      expense: state.expense.filter((expense) => expense.id !== action.id),\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst intialCountState = {\r\n  count: 0,\r\n};\r\n\r\nconst countReducer = (state = intialCountState, action) => {\r\n  if (action.type === CountPlus) {\r\n    return {\r\n      count: state.count + 1,\r\n    };\r\n  } else if (action.type === CountReset) {\r\n    return {\r\n      count: 0,\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  Income: incomeReducer,\r\n  Expense: expenseReducer,\r\n  Count: countReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./RootReducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./redux/RootReducer\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { increseCount } from \"./redux/Count/Count\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}